<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>创作集 on LeeReindeer&#39;s blog</title>
    <link>https://leer.moe/categories/%E5%88%9B%E4%BD%9C%E9%9B%86/</link>
    <description>Recent content in 创作集 on LeeReindeer&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 26 Dec 2019 18:31:21 +0000</lastBuildDate>
    
	<atom:link href="https://leer.moe/categories/%E5%88%9B%E4%BD%9C%E9%9B%86/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Final Project</title>
      <link>https://leer.moe/2019/12/26/final-project-codeflow/</link>
      <pubDate>Thu, 26 Dec 2019 18:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/2019/12/26/final-project-codeflow/</guid>
      <description>Convert Java code to flowchart Once I said to run C language on JVM as my final project, but find it meaningless and useless without making out any scene. During my internship in Pingan fu, I read the heavy and document-less Java code day by day and did the stuff on the test framework. One day, I was reading a code fragment about the accounting voucher using the cartesian set,</description>
    </item>
    
    <item>
      <title>谈谈知识的获取（上）</title>
      <link>https://leer.moe/2019/11/29/how2getknowledge/</link>
      <pubDate>Fri, 29 Nov 2019 18:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/2019/11/29/how2getknowledge/</guid>
      <description>&lt;p&gt;回想在学校的日子，每天每天似乎都在学习新知识，课堂上、教课书本里。而或许有一天你也会有和我一样的想法：“这些不是我想要的，我只是被迫接受，不得不接受啊”，这样的声音虽小，但也是“呐喊”了。我跟从内心，但又不得不得做出一副顺从的样子，把灌输进来的“知识”接受，考完试之后再排出体外。可这不影响，&lt;a href=&#34;https://quoteinvestigator.com/2010/09/25/schooling-vs-education/&#34; title=&#34;schooling vs education&#34;&gt;马克吐温&lt;/a&gt;有一句：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Don&amp;rsquo;t let your boy&amp;rsquo;s schooling interfere with his education.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>扫雷游戏中的算法：Union Find 和 Flood Fill</title>
      <link>https://leer.moe/2019/07/13/minesweeper/</link>
      <pubDate>Sat, 13 Jul 2019 16:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/2019/07/13/minesweeper/</guid>
      <description>&lt;p&gt;讲讲我在实现扫雷游戏时用到的算法，包括 Knuth shuffle、Union Find 和 Flood Fill。&lt;/p&gt;
&lt;p&gt;可以在&lt;a href=&#34;https://github.com/LeeReindeer/Emoji-Mines/releases&#34;&gt;GitHub&lt;/a&gt;下载体验，&lt;em&gt;Emoji Mines&lt;/em&gt; 是一年前就完成的作品。今天把雷生成的算法改了改，游戏体验变好许多，遂又向女胖友推销自己游戏（笑&lt;/p&gt;
&lt;p&gt;在阅读之前假设你已可以熟悉扫雷的游戏规则。为了方便描述，将扫雷游戏中的方块分为：空白方块（即周围都没有雷方块的方块）、数字方块和雷方块。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Grain重构记-UI</title>
      <link>https://leer.moe/2019/01/30/grain-refactor-2/</link>
      <pubDate>Wed, 30 Jan 2019 18:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/2019/01/30/grain-refactor-2/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;距离上一篇文章，已有一段时间，最近事情比较多，好想静下心学习 :crying_cat_face: 这篇就贴一贴海大助手的 UI，不多说了。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Grain重构记-API</title>
      <link>https://leer.moe/2019/01/16/grain-refactor-1/</link>
      <pubDate>Wed, 16 Jan 2019 18:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/2019/01/16/grain-refactor-1/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Grain 是我大一自学 Android 时写的一个App，最终学校关闭服务器接口，卒。
最近发现了一个新的可用的&lt;a href=&#34;http://portal.zjou.edu.cn/index.portal&#34;&gt;网站&lt;/a&gt;，所以重构的时候到了，在框架的选择上我一直纠结是用 MVP 还是 MVVM，最后还是用了 MVVM 配合 Google 的 Jetpack，使用起来很奇妙，也有很多坑。&lt;/p&gt;
&lt;p&gt;目前 App 确定的几个功能是：查成绩、校园卡、借阅查询。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这次我用的数据来源是学校的官网，可以在外网访问，貌似知道这个网站的同学很少啊。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>乞丐版Vi编辑器的实现2-原始输入输出</title>
      <link>https://leer.moe/2018/12/04/write-vip-step-by-step2/</link>
      <pubDate>Tue, 04 Dec 2018 18:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/2018/12/04/write-vip-step-by-step2/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;参考 &lt;a href=&#34;https://viewsourcecode.org/snaptoken/kilo/03.rawInputAndOutput.html&#34;&gt;Raw input and output&lt;/a&gt;，讲解的顺序和原教程不同，而且省略了很多关于转义序列的说明，键位也是模仿 Vi 来实现的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这一步里，主要完成的功能有读取键盘的输入，键位映射和移动光标。&lt;/p&gt;
&lt;h2 id=&#34;重构输入函数&#34;&gt;重构输入函数&lt;/h2&gt;
&lt;p&gt;为了处理更多更复杂的按键，我们需要写一个函数来专门读取键盘输入。将  step1 的代码作如下修改：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>乞丐版Vi编辑器的实现1-Raw mode</title>
      <link>https://leer.moe/2018/12/02/write-vip-step-by-step1/</link>
      <pubDate>Sun, 02 Dec 2018 14:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/2018/12/02/write-vip-step-by-step1/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;参考 &lt;a href=&#34;https://viewsourcecode.org/snaptoken/kilo/02.enteringRawMode.html&#34;&gt;Entering raw mode&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这一节的内容可能比较枯燥，是一些底层的 Terminal 的属性：canonical mode，回显（echoing），键盘按键对应的 ASCII 码（可以发现一些按键不止对应一个编码，还有些按键对应的是同一个编码）和一些杂项设置&amp;hellip;通过改变这些设置，让 Terminal 进入所谓的 “raw mode”。&lt;/p&gt;
&lt;h2 id=&#34;makefile&#34;&gt;Makefile&lt;/h2&gt;
&lt;p&gt;我使用 make 来构建 VIP，因为只有两个源文件，所以 Makefile 很简单：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;color:#008080&#34;&gt;CC&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; gcc
&lt;span style=&#34;color:#008080&#34;&gt;CFLAGS&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; -Wall -Wextra -pedantic -std&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;c99 -O3

&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; vip

&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;debug&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
	&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;$(&lt;/span&gt;CC&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;$(&lt;/span&gt;CFLAGS&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; vip.c -g -o vipd

&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;re&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
	make clean;make

&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;clean&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;
	rm -f vip vipd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;CFLAGS 里使用 c99 标准；使用&lt;code&gt; -O3&lt;/code&gt;进行编译优化，主要是对内联函数进行优化；&lt;code&gt;-Wall -Wextra -pedantic &lt;/code&gt;会打印一些额外的警告，对 debug 有帮助。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>乞丐版Vi编辑器的实现0-想法</title>
      <link>https://leer.moe/2018/12/01/write-vip-step-by-step0/</link>
      <pubDate>Sat, 01 Dec 2018 20:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/2018/12/01/write-vip-step-by-step0/</guid>
      <description>逛 GitHub 的时候发现了一个大概几百行 C 代码实现的命令行编辑器，但是看了一些代码，感觉好垃圾。于是 Google 一下，发现一个Build Your Own Text Editor的教程</description>
    </item>
    
    <item>
      <title>Foggy</title>
      <link>https://leer.moe/2018/07/26/gallery_1/</link>
      <pubDate>Thu, 26 Jul 2018 14:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/2018/07/26/gallery_1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Android Tree2View 3-Core Alogrithm</title>
      <link>https://leer.moe/2018/01/02/tree2view_final_report/</link>
      <pubDate>Tue, 02 Jan 2018 21:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/2018/01/02/tree2view_final_report/</guid>
      <description>&lt;!-- # 数据结构课程设计报告 --&gt;
&lt;h2 id=&#34;目录-content&#34;&gt;目录-Content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%9B%AE%E5%BD%95-content&#34;&gt;目录-Content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#1-%E4%BB%8B%E7%BB%8D-introduction&#34;&gt;1. 介绍-Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD-features&#34;&gt;2. 主要功能-Features&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#21-%E5%8A%9F%E8%83%BD%E5%B1%95%E7%A4%BA-preview&#34;&gt;2.1 功能展示-Preview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-source-code&#34;&gt;3. 源码分析-Source-code&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#31-%E6%A0%91%E7%BB%93%E6%9E%84-tree-data-structure&#34;&gt;3.1 树结构-Tree-Data-structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#32-%E4%B8%BB%E8%A6%81%E7%AE%97%E6%B3%95-alogrithm-in-tree2view&#34;&gt;3.2 主要算法-Alogrithm-in-Tree2View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#33-%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F-adapter-pattern-in-tree2view&#34;&gt;3.3 适配器模式-Adapter-pattern-in-Tree2View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#34-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%99%A8-fileexplorer&#34;&gt;3.4 文件管理器-FileExplorer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4%E4%BD%BF%E7%94%A8-usage&#34;&gt;4.使用-Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#41-%E4%B8%8B%E8%BD%BD&#34;&gt;4.1 下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#42-%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8&#34;&gt;4.2 简单使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#43-%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8&#34;&gt;4.3 进阶使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#5-open-source&#34;&gt;5. Open-Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#6-liscense&#34;&gt;6. Liscense&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-介绍-introduction&#34;&gt;1. 介绍-Introduction&lt;/h2&gt;
&lt;p&gt;我本来是打算就做一个 Android 的文件管理器的，但是文件的结构本身就是树结构。所以才写了 &lt;code&gt;Tree2View&lt;/code&gt; 这个自定义 View。而文件管理器只是作为用这个项目实现的例子。&lt;/p&gt;
&lt;p&gt;还有另外一个原因是：在 &lt;code&gt;javax.swing.JTree&lt;/code&gt; 里是一个树状的 swing 组件，但是 &lt;code&gt;Android&lt;/code&gt; 里却没有一个内置的树状组件，所以就决定造一个。那么 talking is cheap, show me the code.开始吧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android Tree2View 2-Adapter in Tree2View</title>
      <link>https://leer.moe/2017/12/25/my_treeview_2_adapder/</link>
      <pubDate>Mon, 25 Dec 2017 21:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/2017/12/25/my_treeview_2_adapder/</guid>
      <description>&lt;h2 id=&#34;适配什么---adapt-what&#34;&gt;适配什么？ - Adapt what？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;首先有必要（？）讲一下 Adapter 模式，也就是适配器模式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Adapter 模式适配的是什么呢？打个很恰当的比喻（逃），电源适配器大家应该都知道，什么，其实就是充电器嘛。手机的充电器把 220v 的交流电转化成比如说 5v 的电压。所以才可以愉快的充电。适配器模式就是把本来不匹配的接口（这样用二插三插转化器做比喻是不是好点），转化为你想要的接口，Adapter 就相当于充电器了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android Tree2View 1-Introduction</title>
      <link>https://leer.moe/2017/12/14/my_treeview_1/</link>
      <pubDate>Thu, 14 Dec 2017 21:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/2017/12/14/my_treeview_1/</guid>
      <description>&lt;h1 id=&#34;tree2view&#34;&gt;Tree2View&lt;/h1&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;See on &lt;a href=&#34;https://github.com/LeeReindeer/Tree2View&#34;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;主要功能---features&#34;&gt;主要功能 - Features&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tree2View&lt;/th&gt;
&lt;th&gt;FileManage&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;①多级分层的树结构视图&lt;/td&gt;
&lt;td&gt;基本的文件管理器布局&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;②记忆展开状态&lt;/td&gt;
&lt;td&gt;自动展开上次打开未关闭的目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;③使用适配器设计模式，用户可自定义 TreeAdapter&lt;/td&gt;
&lt;td&gt;对不同类型的文件显示不同的Icon&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;④动态增删节点&lt;/td&gt;
&lt;td&gt;删除和添加文件后可自动刷新状态(To-do)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⑤选择模式&lt;/td&gt;
&lt;td&gt;长按节点进行文件操作(Copy, Cut, Rename, Delete)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;效果预览---preview&#34;&gt;效果预览 - Preview&lt;/h2&gt;
&lt;p&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://leer.moe/images/tree_view_product1.png&#34;&gt;
  &lt;img class=&#34;mx-auto&#34; alt=&#34;image&#34; src=&#34;https://leer.moe/images/tree_view_product1.png&#34; /&gt;
&lt;/a&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>乡土中国－分崩离析的乡土社会</title>
      <link>https://leer.moe/2017/05/18/rural_in_china/</link>
      <pubDate>Thu, 18 May 2017 14:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/2017/05/18/rural_in_china/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;今天读完了费孝通教授的&amp;lt;乡土中国&amp;gt;,读完警觉，书中所描绘的乡土社会，何曾不是我从小生活之地？书中一字一句也充满了学者的严谨和乡土社会的淳朴．但书中的乡土社会于今天的，已经不同了，在我看来书中所写的淳朴已经不再了．毕竟这本书成于 1947 年，距今已经 70 年了．&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>浪潮之巅</title>
      <link>https://leer.moe/2017/03/13/peak_of_wave/</link>
      <pubDate>Mon, 13 Mar 2017 22:39:32 +0000</pubDate>
      
      <guid>https://leer.moe/2017/03/13/peak_of_wave/</guid>
      <description>一张思维导图</description>
    </item>
    
  </channel>
</rss>