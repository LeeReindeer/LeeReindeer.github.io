<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>设计模式 on LeeReindeer&#39;s blog</title>
    <link>https://leer.moe/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 设计模式 on LeeReindeer&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 26 May 2021 18:36:15 +0800</lastBuildDate><atom:link href="https://leer.moe/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>分布式系统设计模式-分布式共识核心</title>
      <link>https://leer.moe/post/pattern-of-distributed-system-1-consistent-core/</link>
      <pubDate>Wed, 26 May 2021 18:36:15 +0800</pubDate>
      
      <guid>https://leer.moe/post/pattern-of-distributed-system-1-consistent-core/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;维护一组提供较强一致性的小型集群（共识核心 Consistent Core），以允许大型数据集群协调服务器活动，而无需自行实现基于&lt;em&gt;quorum&lt;/em&gt;的算法。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>分布式系统设计模式-综述</title>
      <link>https://leer.moe/post/pattern-of-distribeted-system-0/</link>
      <pubDate>Sun, 31 Jan 2021 18:36:15 +0800</pubDate>
      
      <guid>https://leer.moe/post/pattern-of-distribeted-system-0/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;分布式系统给软件开发出了个特别的难题。这些系统要求我们保存多个需要保持同步的数据副本。并且我们不能依赖于计算节点的稳定运行，网络延迟可以轻易地导致不一致。尽管如此，许多公司仍然依赖一系列的核心分布式系统，使用它们来解决数据存储、消息通信、系统管理和分布式算力的问题。这些系统使用类似的方案来解决它们面临的共同问题。为了更好得理解、交流和教授分布式系统设计，我们需要设计模式来达成这一目标，所以本文识别出这些解决方案并发展为一系列的设计模式。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Android Tree2View 3-Core Alogrithm</title>
      <link>https://leer.moe/post/tree2view_final_report/</link>
      <pubDate>Tue, 02 Jan 2018 21:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/post/tree2view_final_report/</guid>
      <description>&lt;!-- # 数据结构课程设计报告 --&gt;
&lt;h2 id=&#34;目录-content&#34;&gt;目录-Content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%9B%AE%E5%BD%95-content&#34;&gt;目录-Content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#1-%E4%BB%8B%E7%BB%8D-introduction&#34;&gt;1. 介绍-Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD-features&#34;&gt;2. 主要功能-Features&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#21-%E5%8A%9F%E8%83%BD%E5%B1%95%E7%A4%BA-preview&#34;&gt;2.1 功能展示-Preview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-source-code&#34;&gt;3. 源码分析-Source-code&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#31-%E6%A0%91%E7%BB%93%E6%9E%84-tree-data-structure&#34;&gt;3.1 树结构-Tree-Data-structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#32-%E4%B8%BB%E8%A6%81%E7%AE%97%E6%B3%95-alogrithm-in-tree2view&#34;&gt;3.2 主要算法-Alogrithm-in-Tree2View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#33-%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F-adapter-pattern-in-tree2view&#34;&gt;3.3 适配器模式-Adapter-pattern-in-Tree2View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#34-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%99%A8-fileexplorer&#34;&gt;3.4 文件管理器-FileExplorer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4%E4%BD%BF%E7%94%A8-usage&#34;&gt;4.使用-Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#41-%E4%B8%8B%E8%BD%BD&#34;&gt;4.1 下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#42-%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8&#34;&gt;4.2 简单使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#43-%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8&#34;&gt;4.3 进阶使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#5-open-source&#34;&gt;5. Open-Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#6-liscense&#34;&gt;6. Liscense&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-介绍-introduction&#34;&gt;1. 介绍-Introduction&lt;/h2&gt;
&lt;p&gt;我本来是打算就做一个 Android 的文件管理器的，但是文件的结构本身就是树结构。所以才写了 &lt;code&gt;Tree2View&lt;/code&gt; 这个自定义 View。而文件管理器只是作为用这个项目实现的例子。&lt;/p&gt;
&lt;p&gt;还有另外一个原因是：在 &lt;code&gt;javax.swing.JTree&lt;/code&gt; 里是一个树状的 swing 组件，但是 &lt;code&gt;Android&lt;/code&gt; 里却没有一个内置的树状组件，所以就决定造一个。那么 talking is cheap, show me the code.开始吧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android Tree2View 2-Adapter in Tree2View</title>
      <link>https://leer.moe/post/my_treeview_2_adapder/</link>
      <pubDate>Mon, 25 Dec 2017 21:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/post/my_treeview_2_adapder/</guid>
      <description>&lt;h2 id=&#34;适配什么---adapt-what&#34;&gt;适配什么？ - Adapt what？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;首先有必要（？）讲一下 Adapter 模式，也就是适配器模式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Adapter 模式适配的是什么呢？打个很恰当的比喻（逃），电源适配器大家应该都知道，什么，其实就是充电器嘛。手机的充电器把 220v 的交流电转化成比如说 5v 的电压。所以才可以愉快的充电。适配器模式就是把本来不匹配的接口（这样用二插三插转化器做比喻是不是好点），转化为你想要的接口，Adapter 就相当于充电器了。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
