<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AOP on LeeReindeer&#39;s blog</title>
    <link>https://leer.moe/tags/aop/</link>
    <description>Recent content in AOP on LeeReindeer&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 10 Nov 2018 15:31:21 +0000</lastBuildDate>
    
	<atom:link href="https://leer.moe/tags/aop/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【Spring 揭秘（二）】Spring AOP</title>
      <link>https://leer.moe/2018/11/spring_aop/</link>
      <pubDate>Sat, 10 Nov 2018 15:31:21 +0000</pubDate>
      
      <guid>https://leer.moe/2018/11/spring_aop/</guid>
      <description>&lt;h2 id=&#34;术语&#34;&gt;术语&lt;/h2&gt;
&lt;p&gt;术语不是为了限制你的设计，而是借此可以更方便的讨论和思考这个问题。这是我早上在《游戏设计要则探秘》上看的一句话，当然术语也不能华而不实，最好做到顾名思义或指出本质。&lt;/p&gt;
&lt;p&gt;在使用 AOP 之前，我们需要了解AOP涉及的相关概念。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;JoinPint：AOP的功能模块要植入到OOP的模块中，需要知道在哪些执行点上进行植入，这些执行点就是JoinPoint。JoinPoint可以是方法的调用，字段设置，异常处理执行等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PointCut：PointCut是对JoinPoint的表现形式，可以直接用方法名，正则表达式还有特定的PointCut表述语言。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Advice：Advice就是横切点功能的载体。包括，Before Advice，AAfter Advice，Around Advice。这三个切入的时间不同，可顾名思义。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Aspect：Aspect可以理解为切面，它可以包含多个PointCut和Advice。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>